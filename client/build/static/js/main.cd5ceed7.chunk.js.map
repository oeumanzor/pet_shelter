{"version":3,"sources":["components/display.jsx","components/ExamForm.jsx","components/EditExam.jsx","components/details.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","item","setItem","useEffect","axios","get","then","res","console","log","data","catch","err","map","i","className","key","_id","name","type","to","ExamForm","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","e","preventDefault","madeItem","post","navigate","onChange","target","value","properties","message","EditExam","put","Details","onClick","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cd5ceed7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n\nconst Display = props =>{\n    const [item, setItem] = useState([]);\n\n    useEffect( () => {\n        axios.get(\"http://localhost:8000/api/exam\")\n            .then(res => {\n                console.log(res);\n                setItem(res.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n    \n    return(\n        <div>\n        {item.map( (item, i) => \n            <div className=\"card mb-1\" key={item._id}>\n                <div className=\"card-header\">Pet Name: {item.name}</div>\n                <div className=\"card-body\">\n                    <p>Type: {item.type}</p>\n                    <Link className=\"btn btn-outline-primary float-right\" to={`/edit/${item._id}`}>Edit Pet Info</Link>\n                    <Link className=\"btn btn-primary float-right mr-1\" to={`/info/${item._id}`}>More on This Pet</Link>\n                </div>\n            </div>\n        )}\n    </div>\n    )\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst ExamForm = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const CreateItem = e => {\n        e.preventDefault();\n        const madeItem = {name, type, description, skill1, skill2, skill3};\n        axios.post(\"http://localhost:8000/api/exam\", madeItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                }else {\n                    navigate(\"/\"); \n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"row\">\n        <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreateItem}>\n            <div className=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} />\n                {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Type</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setType(e.target.value)} /></div>\n                {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Description</label>\n                <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)} ></textarea></div>\n                {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Skills 1</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)} /></div>\n                {errors.skill1 ? <p className=\"text-danger\">{errors.skill1.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Skill 2</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)} /></div>\n                {errors.skill2 ? <p className=\"text-danger\">{errors.skill2.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Skill 3</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)} /></div>\n                {errors.skill3 ? <p className=\"text-danger\">{errors.skill3.properties.message}</p>: \"\"}\n            </div>\n            <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Add Pet\" />\n        </form>\n    </div>\n    )\n}\n\nexport default ExamForm;","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst EditExam = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        console.log(props._id);\n        axios.get(`http://localhost:8000/api/exam/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkill1(res.data.skill1);\n                setSkill2(res.data.skill2);\n                setSkill3(res.data.skill3);\n\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n\n    const UpdateItem = e => {\n        e.preventDefault();\n        const madeItem = {name, type, description, skill1, skill2, skill3};\n        console.log(\"loggin madeItem below\")\n        console.log(madeItem)\n        axios.put(`http://localhost:8000/api/exam/${props._id}`, madeItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\"); \n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"row\">\n        <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdateItem}>\n            <div className=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} value={name} />\n                {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Type</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setType(e.target.value)} value={type} /></div>\n                {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Description</label>\n                <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)} value={description} ></textarea></div>\n                {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Skills 1</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)} value={skill1} /></div>\n                {errors.skill1 ? <p className=\"text-danger\">{errors.skill1.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Skill 2</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)} value={skill2} /></div>\n                {errors.skill2 ? <p className=\"text-danger\">{errors.skill2.properties.message}</p>: \"\"}\n\n                <div className=\"form-group\">\n                <label>Skill 3</label>\n                <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)} value={skill3} /></div>\n                {errors.skill3 ? <p className=\"text-danger\">{errors.skill3.properties.message}</p>: \"\"}\n            </div>\n            <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Update Pet Info\" />\n        </form>\n    </div>\n    )\n}\n\nexport default EditExam;","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst Details = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        console.log(props._id);\n        axios.get(`http://localhost:8000/api/exam/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkill1(res.data.skill1);\n                setSkill2(res.data.skill2);\n                setSkill3(res.data.skill3);\n\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/exam/${props._id}`)\n        .then(res => {\n            console.log(res);\n            navigate(\"/\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <div className=\"card mb-1\">\n                <div className=\"card-header\">Pet Name: {name}</div>\n                <div className=\"card-body\">\n                    <p>Type: {type}</p>\n                    <p>Description: {description}</p>\n                    <p>Skill 1: {skill1}</p>\n                    <p>Skill 2: {skill2}</p>\n                    <p>Skill 3: {skill3}</p>\n                    <button className=\"btn btn-outline-danger float-right\" onClick={remove} >Adopt Pet Now!</button>\n                </div>\n            </div>\n    </div>\n    )\n}\n\nexport default Details;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from \"./components/display\";\nimport ExamForm from \"./components/ExamForm\";\nimport EditExam from \"./components/EditExam\";\nimport Details from \"./components/details\";\nimport { Link, Router } from '@reach/router';\n\n\nfunction App() {\n  return (\n        <div className=\"container\">\n          <h1>Pet Shelter</h1>\n            <Link className=\"btn btn-info mr-2\" to=\"/\">Home</Link>\n            <Link className=\"btn btn-info\" to=\"/new\">Add a Pet to the Shelter</Link>\n            <Router className=\"my-5\">\n              <Display path=\"/\" />\n              <ExamForm path=\"/new\" />\n              <EditExam path =\"/edit/:_id\" />\n              <Details path=\"/info/:_id\" /> \n            </Router>\n\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}